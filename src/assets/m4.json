{
  "id": "THREE_WAY_HANDSHAKE",
  "initial": "INITIALIZING",
  "states": {
    "INITIALIZING": {
      "on": {
        "STARTED": {
          "target": "LOADING_VARIABLES"
        }
      }
    },
    "SENDING SYN": {
      "entry": "send (pkt)",
      "on": {
        "PACKET_SENT": {
          "target": "LISTENING",
          "actions": [
            "assign (pkt) (pkt)",
            "assign (queue) (queue)",
            "assign (ack) (ack)",
            "assign (syn/ack) (syn/ack)",
            "assign (syn) (syn)"
          ]
        }
      }
    },
    "LISTENING": {
      "entry": [
        "set (5) (timeout)",
        "wait_packet_signal (queue timeout)"
      ],
      "on": {
        "PACKET_AVAILABLE": {
          "target": "GETTING_FLAGS",
          "actions": [
            "assign (queue) (queue)",
            "assign (pkt) (pkt)",
            "assign (ack) (ack)",
            "assign (syn/ack) (syn/ack)",
            "assign (syn) (syn)"
          ]
        },
        "TIMEOUT": {
          "target": "TIMEOUT ENDING"
        }
      }
    },
    "HANDLING_ACK": {
      "entry": [
        "pop (queue)",
        "done ()"
      ],
      "on": {
        "DONE": {
          "target": "ENDING",
          "actions": [
            "assign (pkt) (pkt)",
            "assign (queue) (queue)"
          ]
        }
      }
    },
    "HANDLING_SYN_ACK": {
      "entry": [
        "set_TCP_automatic_packet_seq (pkt) (pkt)",
        "set_TCP_automatic_packet_ack (pkt queue) (pkt)",
        "set_TCP_flags (pkt ack) (pkt)",
        "pop (queue)",
        "send (pkt)"
      ],
      "on": {
        "PACKET_SENT": {
          "target": "ENDING",
          "actions": [
            "assign (pkt) (pkt)",
            "assign (queue) (queue)"
          ]
        }
      }
    },
    "LOADING_VARIABLES": {
      "entry": [
        "get_from_file (variables role) (role)",
        "get_from_file (variables client) (client)",
        "get_parameters (pkt queue)",
        "get_from_file (variables syn/ack) (syn/ack)",
        "get_from_file (variables ack) (ack)",
        "get_from_file (variables syn) (syn)",
        "done ()"
      ],
      "on": {
        "DONE": [
          {
            "target": "SENDING SYN",
            "cond": "equal (role client)",
            "actions": [
              "assign (pkt) (pkt)",
              "assign (queue) (queue)",
              "assign (ack) (ack)",
              "assign (syn/ack) (syn/ack)",
              "assign (syn) (syn)"
            ]
          },
          {
            "target": "LISTENING",
            "cond": "equal(role server)",
            "actions": "assign (ack) (ack)"
          }
        ]
      }
    },
    "TIMEOUT ENDING": {
      "entry": [
        "set (TIMEOUT) (event)",
        "return (event)"
      ]
    },
    "ENDING": {
      "entry": [
        "set (DONE) (event)",
        "return (event pkt)"
      ]
    },
    "GETTING_FLAGS": {
      "entry": [
        "get_TCP_flags (queue) (flags)",
        "set (TCP_PACKET_RECEIVED) (event)",
        "trigger (event)"
      ],
      "on": {
        "TCP_PACKET_RECEIVED": [
          {
            "target": "HANDLING_ACK",
            "cond": "equal (flags ack)",
            "actions": [
              "assign (pkt) (pkt)",
              "assign (queue) (queue)",
              "assign (ack) (ack)",
              "assign (syn/ack) (syn/ack)",
              "assign (syn) (syn)"
            ]
          },
          {
            "target": "HANDLING_SYN_ACK",
            "cond": "equal (flags syn/ack)",
            "actions": [
              "assign (pkt) (pkt)",
              "assign (queue) (queue)",
              "assign (ack) (ack)",
              "assign (syn/ack) (syn/ack)",
              "assign (syn) (syn)"
            ]
          }
        ]
      }
    }
  }
}
